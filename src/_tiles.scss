.tile {
    display: inline-block;
    position: relative;
    width: 150px;
    height: 150px;

    @for $r from 0 through 3 {
        &[data-r="#{$r}"] .front {
            transform: rotate(#{$r * 90deg});
        }
    }

    .card-sides {
        .card-side {
            background-size: auto 100%;
            box-shadow: none;

            &>* {
                pointer-events: none;
                user-select: none;
            }

            .front {
                transition: transform 0.5s;
            }
        }
    }  

    &[data-type="0"] .front {
        background-image: url('img/tiles-starting.png');

        @for $number from 1 through 4 {
            &[data-number="#{$number}"] {
                background-position-x: #{($number - 1) * 100% / 3};
            }
        }
    }

    @for $age from 1 through 3 {
        &[data-type="#{$age}"] .front {
            background-image: url('img/tiles-ages.png');  
            background-size: auto 300%;
            background-position-y: #{($age - 1) * 100% / 2};

            @for $number from 1 through 15 {
                &[data-number="#{$number}"] {
                    background-position-x: #{$number * 100% / 15};
                }
            }
        }
    }

    &[data-type="8"] .front {
        background-image: url('img/tiles-radar.png');  
        background-size: auto 200%;

        @for $number from 1 through 3 {
            &[data-number="#{$number}"] {
                background-position: #{($number - 1) * 100% / 2} 0%;
            }
        }
        @for $number from 4 through 6 {
            &[data-number="#{$number}"] {
                background-position: #{($number - 4) * 100% / 2} 100%;
            }
        }
    }

    &[data-type="9"] {
        .front {
            background-image: url('img/obstacles.png');
        }

        @each $playerColor in $playerColors {
            $i: index($playerColors, $playerColor) - 1;
            &[data-player-color="#{$playerColor}"] .front { 
                background-position-x: #{$i * 100% / 3};
            }
        }
    }

    &.bga-cards_selectable-card:not(.bga-cards_disabled-card) {
        &:not(.bga-cards_selected-card) {
            animation: selectable-card-animation 1s alternate infinite ease-in-out;
        }

        .card-side {
            box-shadow: unset;
        }
    }    

    &.bga-cards_selected-card:not(.bga-cards_disabled-card) {
        box-shadow: 0 0 5px 5px orange;

        .card-side {
            box-shadow: unset;
        }
    }
}

@keyframes selectable-card-animation {
    0% {
      box-shadow: 0 0 3px 2px rgb(255, 212, 131);
    }
    100% { 
      box-shadow: 0 0 5px 3px rgb(255, 212, 131);
    }
}
